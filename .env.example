# üöÄ Pulso-AI Environment Configuration Template
# Copy this file to .env and update values for your environment

# =====================================
# üóÑÔ∏è DATABASE CONFIGURATION
# =====================================
# PostgreSQL Database URL
POSTGRES_DATABASE_URL=postgresql://pulso_ai:dev_password@postgres:5432/telefonica_datamart
POSTGRES_SCHEMA=telefonica

# For local development (when running outside Docker)
# POSTGRES_DATABASE_URL=postgresql://pulso_ai:dev_password@localhost:5432/telefonica_datamart

# =====================================
# üè¢ BIGQUERY CONFIGURATION  
# =====================================
# BigQuery project and dataset for Telef√≥nica del Per√∫
BIGQUERY_PROJECT_ID=mibot-222814
BIGQUERY_DATASET=BI_USA

# Path to BigQuery service account credentials JSON file
GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/bigquery-credentials.json

# For local development
# GOOGLE_APPLICATION_CREDENTIALS=./core-template/secrets/bigquery-credentials.json

# =====================================
# üî¥ REDIS CONFIGURATION
# =====================================
# Redis URL for caching and session storage
REDIS_URL=redis://redis:6379/0

# For local development
# REDIS_URL=redis://localhost:6379/0

# =====================================
# ‚öôÔ∏è APPLICATION CONFIGURATION
# =====================================
# Application environment (development, testing, production)
ENVIRONMENT=development

# API Server configuration
HOST=0.0.0.0
PORT=8000

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =====================================
# üîê SECURITY CONFIGURATION
# =====================================
# Secret key for JWT tokens and sessions (generate a secure random string)
SECRET_KEY=your-super-secure-secret-key-change-this-in-production

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://frontend:80

# =====================================
# üê≥ DOCKER COMPOSE OVERRIDES
# =====================================
# Docker Compose project name
COMPOSE_PROJECT_NAME=pulso-ai

# PostgreSQL Docker configuration
POSTGRES_DB=telefonica_datamart
POSTGRES_USER=pulso_ai
POSTGRES_PASSWORD=dev_password

# =====================================
# üìä MONITORING & OBSERVABILITY
# =====================================
# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id

# Prometheus metrics endpoint
ENABLE_METRICS=true

# =====================================
# üß™ TESTING CONFIGURATION
# =====================================
# Test database URL (used in CI/CD)
TEST_DATABASE_URL=postgresql://pulso_ai:test_password@localhost:5432/pulso_ai_test

# Test Redis URL
TEST_REDIS_URL=redis://localhost:6379/1

# =====================================
# üìù ISSUE #19 SPECIFIC CONFIGURATION
# =====================================
# Configuration specific to Issue #19: Pipeline ETL b√°sico funcional
# These are the minimum required variables for the basic ETL pipeline

# Client configuration
CLIENT_NAME=telefonica-peru
CLIENT_CONFIG_PATH=./clients/telefonica-peru/config.yaml

# ETL Configuration
ETL_BATCH_SIZE=1000
ETL_TIMEOUT_SECONDS=300

# Dashboard Configuration
DASHBOARD_TITLE="Dashboard Telef√≥nica del Per√∫"
DASHBOARD_REFRESH_INTERVAL=30

# =====================================
# üí° USAGE INSTRUCTIONS
# =====================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Update the values above with your actual configuration
# 3. For BigQuery: Place your service account JSON in core-template/secrets/
# 4. For production: Use secure values and proper secret management
# 5. Never commit the .env file to version control

# =====================================
# üîó RELATED FILES
# =====================================
# - docker-compose.yml: Uses these environment variables
# - core-template/src/api/dependencies.py: Reads configuration
# - clients/telefonica-peru/config.yaml: Client-specific configuration
