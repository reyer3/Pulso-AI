version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: telefonica-postgres
    environment:
      POSTGRES_DB: telefonica_datamart
      POSTGRES_USER: pulso_ai
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - pulso-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulso_ai -d telefonica_datamart"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application (ETL + API)
  app:
    build: 
      context: ./core-template
      dockerfile: Dockerfile
    container_name: telefonica-app
    environment:
      # PostgreSQL connection
      - POSTGRES_DATABASE_URL=postgresql://pulso_ai:dev_password@postgres:5432/telefonica_datamart
      - POSTGRES_SCHEMA=telefonica
      
      # BigQuery configuration
      - BIGQUERY_PROJECT_ID=mibot-222814
      - BIGQUERY_DATASET=BI_USA
      - GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/bigquery-credentials.json
      
      # Application settings
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount client configuration
      - ./clients/telefonica-peru:/app/config:ro
      # Mount BigQuery credentials (create empty file if not exists)
      - ./infrastructure/secrets/bigquery-credentials.json:/app/secrets/bigquery-credentials.json:ro
      # Mount source code for development (optional)
      - ./core-template/src:/app/src:ro
    networks:
      - pulso-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Optional - for Issue #19 basic demo)
  frontend:
    image: nginx:alpine
    container_name: telefonica-frontend
    ports:
      - "3000:80"
    volumes:
      - ./infrastructure/frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/frontend/html:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - pulso-network
    restart: unless-stopped

  # Redis (Future use for caching)
  redis:
    image: redis:7-alpine
    container_name: telefonica-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pulso-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pulso-network:
    driver: bridge
    name: pulso-telefonica
