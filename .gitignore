# üöÄ Pulso-AI .gitignore
# Archivos y directorios que no deben ser committeados

# =====================================
# üîê SECRETS & ENVIRONMENT
# =====================================
# General environment files
.env
.env.*
!.env.example
!.env.*.example

# Specific environment files (if needed beyond .env.*)
.env.local
.env.production
.env.staging

# Credential files and directories
secrets/
.secrets/
credentials/
*.key
*.pem
*.crt
*.p12
*.jks
google-credentials.json
*-credentials.json
service-account-key.json

# Terraform variable files (often contain secrets)
terraform.tfvars
terraform.tfvars.json

# =====================================
# üêç PYTHON
# =====================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
# build/ # Covered in Build Artifacts
# dist/  # Covered in Build Artifacts
develop-eggs/
downloads/ # General downloads, can also be project-specific data
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Virtual environments
.venv/
venv/
env/
ENV/
env.bak/
venv.bak/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Polars cache
.polars/

# =====================================
# ‚öõÔ∏è NODE.JS / FRONTEND
# =====================================

# Dependencies
node_modules/
jspm_packages/
bower_components/

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
# coverage/ # Covered in Testing section
*.lcov

# nyc test coverage
# .nyc_output # Covered in Testing section

# Grunt intermediate storage
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
# *.tgz # Covered in Build Artifacts

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.parcel-cache

# Next.js build output
.next/

# Nuxt.js build / generate output
.nuxt/
# dist/ # Covered in Build Artifacts, can be Nuxt specific output

# Gatsby files
# .cache/ # Prefer specific caches like .parcel-cache, .dev-cache
public/ # Gatsby public output directory

# Storybook build outputs
.out/
.storybook-out/

# =====================================
# üê≥ DOCKER & CONTAINERS
# =====================================
docker-compose.override.yml
*.dockerfile.local
.docker/
.dockerignore

# =====================================
# üóÑÔ∏è DATABASES
# =====================================
*.db
*.sqlite
*.sqlite3
*.db-journal
*.db-wal
*.db-shm

# PostgreSQL dumps
*.sql # Be cautious if SQL files are for schema definition
*.dump

# Redis dumps
dump.rdb

# =====================================
# üìù LOGS
# =====================================
logs/
*.log
*.log.*
*.err
# *.out # Can be too generic, check if needed for specific log outputs

# =====================================
# üíæ DATA & STORAGE (Project specific data, large files, backups)
# =====================================
data/
storage/
uploads/
# downloads/ # Already in Python section, can be here if general
*.csv
*.xlsx
*.xls
*.json # If large data files, .json.bak is more specific for backups
*.json.bak
*.parquet

# Backup files
*.bak
*.backup
*.old

# =====================================
# üîß DEVELOPMENT TOOLS & EDITORS
# =====================================

# VSCode
.vscode/*
!.vscode/extensions.json
!.vscode/launch.json # Commit if project-standard launch configs
!.vscode/settings.json # Commit if project-standard settings
!.vscode/tasks.json # Commit if project-standard tasks
!.vscode/*.example.json
*.code-workspace # User-specific workspace files

# JetBrains IDEs (PyCharm, IntelliJ, etc.)
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.sw[po] # Covers .swp, .swo
*~ # Common backup extension

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =====================================
# üìä ANALYTICS & PROFILING
# =====================================
*.prof
*.profile
.profiling/
.profiler-output/ # From feature branch project specific

# =====================================
# üèóÔ∏è BUILD ARTIFACTS
# =====================================
build/
dist/
*.tar.gz
*.zip
*.tgz
*.dmg
*.exe
*.msi
*.deb
*.rpm

# =====================================
# üß™ TESTING
# =====================================
.coverage
.coverage.*
coverage/
coverage.xml
*.cover
*.py,cover # Specific to some Python coverage tools

.pytest_cache/
.tox/
.nox/
htmlcov/
nosetests.xml # If using nosetests
.hypothesis/
.nyc_output

# Test databases
test.db
test.sqlite
*_test.db

# Test results/reports
test-results/
test-reports/

# =====================================
# üåê DEPLOYMENT & INFRASTRUCTURE
# =====================================

# Terraform
.terraform/
*.tfstate
*.tfstate.*
.terraform.lock.hcl
# terraform.tfvars # Already in Secrets, sensitive
# terraform.tfvars.json # Already in Secrets, sensitive

# Kubernetes
*.kubeconfig # Usually user-specific, should not be committed
k8s/secrets/ # Actual secret files
infrastructure/kubernetes/secrets/ # Actual secret files

# Helm
charts/*.tgz # Packaged charts

# =====================================
# üîç MONITORING & OBSERVABILITY (Specific tool directories)
# =====================================
.prometheus/
.grafana/
jaeger-traces/

# =====================================
# üì± MOBILE (Future Placeholder)
# =====================================
# *.mobileprovision
# *.p8
# *.p12 # Already in Secrets
# android/app/debug
# android/app/profile
# android/app/release

# =====================================
# üíº BUSINESS DATA & CLIENT CONFIGURATIONS
# =====================================
# Client-specific data folders (ensure these don't contain code or essential config)
clients/*/data/
clients/*/exports/
clients/*/backups/

# Client-specific configuration secrets and sensitive files
clients/*/config/secrets/
clients/*/secrets/ # Alternative path for secrets
clients/*/config/.env*
clients/*/config/*credentials.json
clients/*/config/*.key
clients/*/config/*.pem

# Example of how to allow template/example files for clients
# This assumes you want to commit example configurations within the template client's structure.
# Adjust paths and patterns as necessary for your project.
# For example, to allow committing everything under `clients/template/config/secrets/`
# while `clients/*/config/secrets/` ignores secrets for actual clients:
!clients/template/config/secrets/
# Or to allow specific example files:
# !clients/template/config/secrets/*example*

# The original broad rule from feature branch for template:
!clients/template/ # Un-ignores the entire template directory if a broader rule like 'clients/*/' existed

# =====================================
# üéØ PROJECT SPECIFIC (Pulso-AI)
# =====================================

# Pulso-AI specific temporary files
.pulso-ai-temp/
*.pulso-temp

# Client configuration backups (if not covered by general *.bak)
*.config.bak
*_backup_*.yaml

# Development cache & local configurations
.dev-cache/
.local/
local-config/
dev-data/

# =====================================
# üåç OS SPECIFIC
# =====================================

# macOS
.DS_Store
.DS_Store?
.AppleDouble
.LSOverride
._*
.Spotlight-V100
.Trashes

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
# *.msi # Covered in Build Artifacts
*.msm
*.msp
*.lnk
*.stackdump

# Linux
*~ # Also editor backup
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =====================================
# üìù DOCUMENTATION TEMP & BUILD OUTPUTS
# =====================================
docs/_build/
docs/.doctrees/
docs/site/ # For tools like Sphinx building into docs/site
site/ # For tools like MkDocs building into root /site

# =====================================
# üé® ASSETS CACHE & MAPS
# =====================================
.sass-cache/
*.css.map
*.js.map

# =====================================
# ‚è≥ GENERAL TEMPORARY FILES
# =====================================
*.tmp
*.temp
*.swp # Redundant with Vim specific, but fine as general catch-all
*.swo # Redundant with Vim specific